<div class="order_page">
    <div class="content">
        <div class="am-g">
            <div class="am-u-lg-8 content-left extra">
                <nav class="nav">
                    <% include order-nav.ejs %>
                    <div class="filter sy-hidden">
                        <a class="item active" href="#" data-event-click>待领取<span>0</span></a>
                        <a class="item" href="#10" data-event-click>进行中<span>0</span></a>
                        <!--<a class="item extra sy-hidden" href="#20" data-event-click>已提交<span>0</span></a>-->
                        <a class="item" href="#25" data-event-click>已完成<span>0</span></a>
                        <a class="item extra sy-hidden" href="#21" data-event-click>退稿/终止<span>0</span></a>
                        <div class="sy-float-r">
                            <label class="am-radio am-success">
                                <input type="radio" name="fileType" value="1" data-event-click data-am-ucheck checked> 图书试译
                            </label>
                            <label class="am-radio am-success">
                                <input type="radio" name="fileType" value="2" data-event-click data-am-ucheck> 图书翻译
                            </label>
                        </div>
                    </div>
                    <div class="explain sy-font-sm sy-orange"
                         title="点击查看"
                         onclick="$.toolinfo({
                            title: '图书翻译类型说明',
                            txt: __bundle__.promptTxt.bookExplain
                         })">图书翻译类型说明</div>
                </nav>
                <div class="search-box md searchBox sy-hidden">
                    <label for="">项目编号：
                        <input data-cd="01" data-fd="projectId" class="taskNo md" type="text" placeholder="输入项目编号"></label>
                    <label for="">任务编号：
                        <input data-cd="01" data-fd="taskId" class="taskNo md" type="text" placeholder="输入任务编号"></label>
                    <label for="">完成时间：
                        <input data-cd="11" data-fd="realCompletTimeQuery" type="text" class="am-form-field comStartTime" placeholder="选择开始时间"> -
                        <input data-cd="14" data-fd="realCompletTimeQuery" type="text" class="am-form-field comEndTime" placeholder="选择结束时间">
                    </label>
                    <label for="">结算时间：
                        <input data-cd="11" data-fd="jsTimeQuery" type="text" class="am-form-field settleStartTime" placeholder="选择开始时间"> -
                        <input data-cd="14" data-fd="jsTimeQuery" type="text" class="am-form-field settleEndTime" placeholder="选择结束时间">
                    </label>
                    <label for=""><button class="sy-btn sy-btn-green sy-btn-sm searchBtn">搜索</button></label>
                </div>
                <div class="totalBox sy-right" style="padding-bottom: 10px"></div>
                <section class="cnt orderContent">
                    <div class="empty"></div>
                </section>
                <div class="sy-center more">
                    <input class="order_PageNo" type="hidden" value="1">
                    <button class="sy-btn order_LoadMoreBtn sy-hidden" type="button" data-event-click>加载更多</button>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript" src="/static/lib/laydate.min.js"></script>
<script>
    (function (window, document, $) {

        laydate.render({ elem: '.comStartTime' });
        laydate.render({ elem: '.comEndTime' });
        laydate.render({ elem: '.settleStartTime', type: 'month' });
        laydate.render({ elem: '.settleEndTime', type: 'month' });

        (location.hash === '#20' || location.hash === '#21') && (location.hash = '');

        var unclaimedUrl = '/transTask/getNotReceiveTask', //图书翻译待领取
            claimedUrl = '/transTask/getTaskList', //图书翻译除待领取
            rowCountUrl = '/transTask/allTransListCount'; //各状态条目
            unclaimedUrl_try = '/tryTransTask/getTryTransListByPage', //图书试译待领取
            claimedUrl_try = '/tryTransTask/getTryTransListByStatus', //图书试译除待领取
            rowCountUrl_try = '/tryTransTask/allTransListCount'; //试译各状态条目
        var hash = location.hash;

        var searchBox = $('.searchBox'),
            searchBtn = $('.searchBtn');

        $('.filter>a.item').each(function () {
            if($(this).attr('href') === hash){
                $(this).addClass('active').siblings().removeClass('active');
                hash === '#25' && $('input[name=fileType]:checked')[0].value === '2' && searchBox.removeClass('sy-hidden')
            }
        });

        //初始获取状态条目
        __api__.getOrderStatusNum({
            url: rowCountUrl_try,
            type: ''
        });

        __api__.getNoAcceptNum({
            url: unclaimedUrl_try,
            data: {
                "page": 1,
                "limit": 5
            }
        });

        filterConfig({
            el: $('.order_PageNo')[0],
            type: '1',
            method: 'get',
            url: unclaimedUrl_try
        })

        var pageOrder = document.getElementsByClassName('order_page').item(0),
            container = document.getElementsByClassName('orderContent').item(0),
            pageEl = document.getElementsByClassName('order_PageNo').item(0);

        /*
        * 订单页面 "div.order_page" 添加“click”事件委托
        * */
        pageOrder.addEventListener('click', function (e) {
            var event = e || window.event,
                target = event.target || event.srcElement;
            var extraEl = $(".filter>a.item.extra"),
                checkedEl = $('input[name=fileType]:checked');
            var type = checkedEl[0].value,
                url = '',
                method = 'get';
            //包含属性'data-event-click'的元素触发事件
            if(target.getAttribute('data-event-click') !== null){
                if($('.filter').attr('disabled')){
                    event.preventDefault();
                    $.warning('请稍等，正在获取数据');
                    return false;
                }
                $('.totalBox').empty()
            }
            //切换“订单状态”
            if(target.nodeName === 'A' && $(target).hasClass('item')) {
                var getClickHash = target.getAttribute('href').slice(1);
                searchBox.addClass('sy-hidden');
                pageEl.value = 1;
                container.innerHTML = '';
                location.hash = getClickHash;
                $(target).addClass('active').siblings().removeClass('active');
                type === '2' && getClickHash === '25' && searchBox.removeClass('sy-hidden');
                $('button.order_LoadMoreBtn').removeAttr('data-sh')
            //切换“订单类型”
            }else if(target.nodeName === 'INPUT' && ($(target).hasClass('am-ucheck-checkbox') || $(target).hasClass('am-ucheck-radio'))) {
                pageEl.value = 1;
                container.innerHTML = '';
                __api__.getOrderStatusNum({
                    url: type === "1" ? rowCountUrl_try : rowCountUrl,
                    type: type === "1" ? '' : '3'
                });
                $('button.order_LoadMoreBtn').removeAttr('data-sh');
                //当在“已提交、退稿状态时”，切换到试译，重置hash
                if(location.hash === '#20' || location.hash === '#21'){
                    location.hash = '';
                    $('.filter>a.item').eq(0).addClass('active').siblings().removeClass('active');
                }
                //图书翻译时，可搜索
                if(type === "1"){
                    extraEl.addClass('sy-hidden');
                    searchBox.addClass('sy-hidden')
                }else{
                    extraEl.removeClass('sy-hidden');
                    location.hash === '#25' && searchBox.removeClass('sy-hidden')
                }
            }else if($(target).hasClass('order_LoadMoreBtn')){//加载更多
                target.setAttribute('disabled', true);
                target.innerHTML = '<i class="am-icon-spinner am-icon-pulse"></i>';
            }
            //发送ajax ----> 自定义判断type: 1试译  2翻译
            if(target.getAttribute('data-event-click') !== null){

                filterConfig({
                    el: $('.order_PageNo')[0],
                    type: type,
                    method: method,
                    url: url,
                    isSearch: $('button.order_LoadMoreBtn').attr('data-sh')
                })
            }
        }, false);

        //"已完成"状态 && 图书翻译，可搜索
        searchBtn.click(function () {
            $('input.order_PageNo').val('1');
            $('.order_LoadMoreBtn').attr('data-sh', '1');
            $('.orderContent').empty();
            $('.totalBox').empty();
            filterConfig({
                el: $('.order_PageNo')[0],
                type: '3',
                method: 'POST',
                url: claimedUrl,
                isSearch: $('button.order_LoadMoreBtn').attr('data-sh')
            })
        });

        //接口配置
        function filterConfig(config) {
            var status = location.hash ? location.hash.slice(1) : '',
                type = config.type,
                method = config.method,
                url = config.url,
                reqData = {
                    "page": config.el.value,
                    "limit": 5
                };
            if(type === "1"){  //图书试译
                if(!status){ //待领取
                    url = unclaimedUrl_try;
                }else{ //其他状态
                    if(status === '10'){
                        status = '1';
                    }else if(status === '25'){
                        status = '0';
                    }
                    url = claimedUrl_try;
                    reqData.status = status;
                }
            }else{ //图书翻译
                if(!status){
                    url = unclaimedUrl;
                    reqData.type = '3';
                }else{
                    var defaultCondition = {
                        "page":{
                            "page": config.el.value,
                            "limit": 5,
                            "sort": status === '25' ? 'realCompletTime' : 'requireTime',
                            "desc": 'desc'
                        },
                        "status": status,
                        "type": '3'
                    }
                    //“已完成”状态 && 图书翻译，添加搜索条件
                    if(config.isSearch){
                        var conditionArr = [];
                        $('.searchBox input').each(function () {
                            this.value && conditionArr.push({
                                condition: this.getAttribute('data-cd'),
                                field: this.getAttribute('data-fd'),
                                value: this.value
                            })
                        });
                        defaultCondition.conditionVo = {
                            conditionType: 'and',
                            queryVos: conditionArr
                        }
                    }
                    method = 'POST';
                    url = claimedUrl;
                    reqData = {
                        jsonStr: JSON.stringify(defaultCondition)
                    }
                }
            }
            __api__.getOrderBook({
                method: method,
                url: url,
                data: reqData
            });
        }

    }(window, document, jQuery))
</script>
