<div class="order_page">
    <div class="content">
        <div class="am-g">
            <div class="am-u-lg-8 content-left">
                <nav class="nav">
                    <% include order-nav.ejs %>
                    <div class="filter sy-hidden">
                        <a class="item active" href="#" data-event-click>待领取<span>0</span></a>
                        <a class="item" href="#10" data-event-click>进行中<span>0</span></a>
                        <a class="item extra sy-hidden" href="#20" data-event-click>已提交<span>0</span></a>
                        <a class="item" href="#25" data-event-click>已完成<span>0</span></a>
                        <a class="item extra sy-hidden" href="#21" data-event-click>退稿/终止<span>0</span></a>
                        <div class="sy-float-r">
                            <label class="am-radio am-success">
                                <input type="radio" name="fileType" value="1" data-event-click data-am-ucheck checked> 图书试译
                            </label>
                            <label class="am-radio am-success">
                                <input type="radio" name="fileType" value="2" data-event-click data-am-ucheck> 图书翻译
                            </label>
                        </div>
                    </div>
                </nav>
                <section class="cnt orderContent">
                    <div class="empty"></div>
                </section>
                <div class="sy-center more">
                    <input class="order_PageNo" type="hidden" value="1">
                    <button class="sy-btn order_LoadMoreBtn sy-hidden" type="button" data-event-click>加载更多</button>
                </div>
            </div>
            <div class="am-u-lg-4 content-right">
                <div class="h-40"></div>
                <div class="detail">
                    <div class="title">图书翻译类型说明</div>
                    <div class="cnt">
                        <span>图书试译</span>
                        <p>图书翻译项目持续周期长、能力要求高，译员正式接单之前需进行试译。试译片段均节选自待翻译图书，试译稿件质量直接影响译员是否能够接单。</p>
                        <span>图书翻译</span>
                        <p>图书翻译是传统的笔译项目最早的服务内容之一。图书翻译项目涵盖各类书籍杂志，可分为社会科学和自然科学类，图书翻译内容包括小说、儿童读物、非小说类、专业书、工具书、手册、书目、剧本、报告、日记、书集、摄影绘画集，主要语种含有中文、英语、西班牙语、德语、意大利语、葡萄牙语、马来西亚语等中外语种。</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    (function (window, document, $) {

        (location.hash === '#20' || location.hash === '#21') && (location.hash = '');

        var unclaimedUrl = '/transTask/getNotReceiveTask', //图书翻译待领取
            claimedUrl = '/transTask/getTaskList', //图书翻译除待领取
            rowCountUrl = '/transTask/allTransListCount'; //各状态条目
            unclaimedUrl_try = '/tryTransTask/getTryTransListByPage', //图书试译待领取
            claimedUrl_try = '/tryTransTask/getTryTransListByStatus', //图书试译除待领取
            rowCountUrl_try = '/tryTransTask/allTransListCount'; //试译各状态条目
        var hash = location.hash;

        $('.filter>a.item').each(function () {
            if($(this).attr('href') === hash){
                $(this).addClass('active').siblings().removeClass('active');
            }
        });

        //初始获取状态条目
        __api__.getOrderStatusNum({
            url: rowCountUrl_try,
            type: ''
        });

        __api__.getNoAcceptNum({
            url: unclaimedUrl_try,
            data: {
                "page": 1,
                "limit": 5
            }
        });

        filterConfig({
            el: $('.order_PageNo')[0],
            type: '1',
            method: 'get',
            url: unclaimedUrl_try
        })

        var pageOrder = document.getElementsByClassName('order_page').item(0),
            container = document.getElementsByClassName('orderContent').item(0),
            pageEl = document.getElementsByClassName('order_PageNo').item(0);

        /*
        * 订单页面 "div.order_page" 添加“click”事件委托
        * */
        pageOrder.addEventListener('click', function (e) {
            var event = e || window.event,
                target = event.target || event.srcElement;
            var extraEl = $(".filter>a.item.extra"),
                checkedEl = $('input[name=fileType]:checked');
            var type = "1", url = '', method = 'get';
            //包含属性'data-event-click'的元素触发事件
            if(target.getAttribute('data-event-click') !== null){
                if($('.filter').attr('disabled')){
                    event.preventDefault();
                    $.warning('请稍等，正在获取数据');
                    return false;
                }
                type = checkedEl[0].value;
            }
            //切换“订单状态”
            if(target.nodeName === 'A' && $(target).hasClass('item')) {
                pageEl.value = 1;
                container.innerHTML = '';
                location.hash = target.getAttribute('href').slice(1);
                $(target).addClass('active').siblings().removeClass('active');
            //切换“订单类型”
            }else if(target.nodeName === 'INPUT' && ($(target).hasClass('am-ucheck-checkbox') || $(target).hasClass('am-ucheck-radio'))) {
                pageEl.value = 1;
                container.innerHTML = '';
                type === "1" ? extraEl.addClass('sy-hidden') : extraEl.removeClass('sy-hidden');
                __api__.getOrderStatusNum({
                    url: type === "1" ? rowCountUrl_try : rowCountUrl,
                    type: type === "1" ? '' : '3'
                });
                //当在“已提交、退稿状态时”，切换到试译，重置hash
                if(location.hash === '#20' || location.hash === '#21'){
                    location.hash = '';
                    $('.filter>a.item').eq(0).addClass('active').siblings().removeClass('active');
                }
                //加载更多
            }else if($(target).hasClass('order_LoadMoreBtn')){
                target.setAttribute('disabled', true);
                target.innerHTML = '<i class="am-icon-spinner am-icon-pulse"></i>';
            }
            //发送ajax ----> 自定义判断type: 1试译  2翻译
            if(target.getAttribute('data-event-click') !== null){

                filterConfig({
                    el: $('.order_PageNo')[0],
                    type: type,
                    method: method,
                    url: url
                })
            }
        }, false)

        function filterConfig(config) {
            var status = location.hash ? location.hash.slice(1) : '',
                type = config.type,
                method = config.method,
                url = config.url,
                reqData = {
                    "page": config.el.value,
                    "limit": 5
                };
            if(type === "1"){  //图书试译
                if(!status){ //待领取
                    url = unclaimedUrl_try;
                }else{ //其他状态
                    if(status === '10'){
                        status = '1';
                    }else if(status === '25'){
                        status = '0';
                    }
                    url = claimedUrl_try;
                    reqData.status = status;
                }
            }else{ //图书翻译
                if(!status){
                    url = unclaimedUrl;
                    reqData.type = '3';
                }else{
                    method = 'POST';
                    url = claimedUrl;
                    reqData = {
                        jsonStr: JSON.stringify({
                            "page":{
                                "page": config.el.value,
                                "limit": 5
                            },
                            "status": status,
                            "type": '3'
                        })
                    }
                }
            }
            __api__.getOrderBook({
                method: method,
                url: url,
                data: reqData
            });
        }

    }(window, document, jQuery))
</script>
